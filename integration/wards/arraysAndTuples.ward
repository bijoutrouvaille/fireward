type Tuple1 = [string, 3, 'hello', {a: 1}?]
type A = {test: Tuple1}

match /a/{x} is A {
  allow read, write: true
}

type B = {
  test: [float, float, float?, float?]
}
match /b/{x} is B {
  allow read, write: true;
}
type Test1 = {
  a: 1
}
type C = {
  test: Test1[]
}

match /c/{x} is C {
  allow read, write: true;
}

// Issue 18
type Session = {
  dayOfWeek: int
}
type Booking = {
  sessions: [Session, Session?]
}
match /book/{id} is Booking {
  allow read, write: true;
}